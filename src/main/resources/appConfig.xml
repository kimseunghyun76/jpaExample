<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!--JPA 설정 추가-->
    <jpa:repositories base-package="jpabook.jpashop.repository"/>

    <!--어노테이션 기반의 트랜잭션 관리자 활성화, @Transactional 이 붙은 곳에 트랜잭션 적용-->
    <tx:annotation-driven/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--jpa repositories base package-->
    <context:component-scan base-package="jpabook.jpashop.service, jpabook.jpashop.repository , jpabook.jpashop.web"/>

    <!--H2(인메모리 데이터 베이스)와 Mysql 둘다 배치 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
<!--        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/shop?autoReconnect=true"/>
        <property name="username" value="root"/>
        <property name="password" value="1212"/>-->
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:jpashop"/>
        <!--서버 모드 변경 : jdbc:h2:tcp://localhost/~/jpashop:MVCC=TRUE-->
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!--트랜젝션 관리자 등록, jpa니까, JpaTransactionManager (DataSourceTransactionManager 기능 포함)  -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- @Repository 어노테이션이 붙어있는 스프링 빈에 예외 변환 AOP를 적용 -->
    <!-- AOP는 JPA 예외를 스프링 프레임워크가 추상화한 예외로 변환 줌. -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- LocalContainerEntityManagerFactoryBean 요걸 스프링 빈으로 등록해야 JPA를 사용할수 있음.  -->
    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- @Entity 탐색 시작 위치 -->
        <property name="packagesToScan" value="jpabook.jpashop.domain"/>
        <property name="jpaVendorAdapter">
            <!-- 하이버네이트 구현체 사용 -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <!-- 하이버네이트 상세 설정 -->
        <property name="jpaProperties">
            <props>
                <!-- 방언 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
                <!-- SQL 보기 -->
                <prop key="hibernate.show_sql">true</prop>
                <!-- SQL 정렬해서 보기 -->
                <prop key="hibernate.format_sql">true</prop>
                <!-- SQL 코멘트 보기 -->
                <prop key="hibernate.use_sql_comments">true</prop>
                <!-- 새 버전의 ID 생성 옵션 -->
                <prop key="hibernate.id.new_generator_mappings">true</prop>
                <!-- DDL 자동 생성 -->
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <!--create : 기존 DDL 제거하고 새로 생성</prop>-->
                <!--create-drop:create : 어플이 종료될때 drop 한다.-->
                <!--update : 현재 데이터베이스 DDL과 비교해서 변경사항만 수정-->
                <!--validate : 비교해서 다르면 경고하고 어플 실행 안한다. 이 설정은 DDL을 변경하지 않는다.-->
            </props>
        </property>
    </bean>

    <!--JSON 컨버터 추가-->
<!--
    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

-->

</beans>